{
  "contractName": "TodoList",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/H/CS/BC/eth-todo-list/contracts/TodoList.sol\":\"TodoList\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/H/CS/BC/eth-todo-list/contracts/TodoList.sol\":{\"keccak256\":\"0x8144d755fed5916959e7ecd2439b041a920f05ab0000b1f784568bfc32febbef\",\"urls\":[\"bzzr://3df900d5a299c3d5776b118f397e2c0b6d4b10a401d83b5cc7afe0a3a4f89fa4\"]}},\"version\":1}",
  "bytecode": "0x608060405260008055348015601357600080fd5b5060358060216000396000f3fe6080604052600080fdfea165627a7a723058200cc367118d214f91f8b87a5661cddc89e2d85daa9ea58e0219ac40bd7ca23fdb0029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a723058200cc367118d214f91f8b87a5661cddc89e2d85daa9ea58e0219ac40bd7ca23fdb0029",
  "sourceMap": "27:46:1:-;;;68:1;51:18;;27:46;8:9:-1;5:2;;;30:1;27;20:12;5:2;27:46:1;;;;;;;",
  "deployedSourceMap": "27:46:1:-;;;;;",
  "source": "pragma solidity ^0.5.7;\r\n\r\ncontract TodoList{\r\n    uint taskCount = 0;\r\n}",
  "sourcePath": "H:/CS/BC/eth-todo-list/contracts/TodoList.sol",
  "ast": {
    "absolutePath": "/H/CS/BC/eth-todo-list/contracts/TodoList.sol",
    "exportedSymbols": {
      "TodoList": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "TodoList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 61,
            "name": "taskCount",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "51:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "51:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "68:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          }
        ],
        "scope": 63,
        "src": "27:46:1"
      }
    ],
    "src": "0:73:1"
  },
  "legacyAST": {
    "absolutePath": "/H/CS/BC/eth-todo-list/contracts/TodoList.sol",
    "exportedSymbols": {
      "TodoList": [
        62
      ]
    },
    "id": 63,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 62,
        "linearizedBaseContracts": [
          62
        ],
        "name": "TodoList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 61,
            "name": "taskCount",
            "nodeType": "VariableDeclaration",
            "scope": 62,
            "src": "51:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 59,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "51:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "68:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          }
        ],
        "scope": 63,
        "src": "27:46:1"
      }
    ],
    "src": "0:73:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x645B6DA3bF727Ad65b83c56830e86949745F358f",
      "transactionHash": "0xf18a501b68f9a008f0dc86ff9ff0560cc150e4f620b86cfffc35e784a33e1296"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-14T11:13:25.249Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}