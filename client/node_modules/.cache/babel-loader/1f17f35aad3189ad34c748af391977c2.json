{"ast":null,"code":"var _jsxFileName = \"H:\\\\CS\\\\BC\\\\eth-todo-list\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { TODO_LIST_ADDRESS, TODO_LIST_ABI } from './config';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    this.setState({\n      account: accounts[0]\n    });\n    const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n    this.setState({\n      todoList\n    });\n    console.log(\"TodoList: \", todoList);\n    var taskCount = await todoList.methods.taskCount().call();\n    taskCount = taskCount.toNumber();\n    this.setState({\n      taskCount\n    });\n    console.log(taskCount);\n\n    for (var i = 1; i <= taskCount; i++) {\n      var duffa = await todoList.methods.tasks(i).call();\n      this.setState({\n        tasks: [...this.state.tasks, duffa]\n      });\n    }\n\n    console.log(\"Tasks are here\", this.state.tasks);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      taskCount: 0,\n      tasks: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"taskList\",\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.tasks.map((task, key) => {\n      return React.createElement(\"div\", {\n        className: \"taskTemplate\",\n        className: \"checkbox\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, task.description)));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["H:\\CS\\BC\\eth-todo-list\\client\\src\\App.js"],"names":["React","Component","Web3","TODO_LIST_ADDRESS","TODO_LIST_ABI","App","componentWillMount","loadBlockchainData","web3","providers","HttpProvider","accounts","eth","getAccounts","console","log","setState","account","todoList","Contract","taskCount","methods","call","toNumber","i","duffa","tasks","state","constructor","props","render","map","task","key","description"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,SAAQC,iBAAR,EAA2BC,aAA3B,QAA+C,UAA/C;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAEzBK,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA0B;AACxB,UAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS,IAAIA,IAAI,CAACO,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAT,CAAb;AACA,UAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAAC,CAAD,CAApB;AACA,SAAKK,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAEN,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACA,UAAMO,QAAQ,GAAG,IAAIV,IAAI,CAACI,GAAL,CAASO,QAAb,CAAsBf,aAAtB,EAAqCD,iBAArC,CAAjB;AACA,SAAKa,QAAL,CAAc;AAACE,MAAAA;AAAD,KAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBG,QAAzB;AACA,QAAIE,SAAS,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiBD,SAAjB,GAA6BE,IAA7B,EAAtB;AACAF,IAAAA,SAAS,GAAGA,SAAS,CAACG,QAAV,EAAZ;AACA,SAAKP,QAAL,CAAc;AAAEI,MAAAA;AAAF,KAAd;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;;AAEA,SAAK,IAAII,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAGJ,SAAlB,EAA6BI,CAAC,EAA9B,EAAiC;AAC/B,UAAIC,KAAK,GAAG,MAAMP,QAAQ,CAACG,OAAT,CAAiBK,KAAjB,CAAuBF,CAAvB,EAA0BF,IAA1B,EAAlB;AACA,WAAKN,QAAL,CAAc;AACZU,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAf,EAAsBD,KAAtB;AADK,OAAd;AAGD;;AACDX,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B,KAAKY,KAAL,CAAWD,KAAxC;AACD;;AAEDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKF,KAAL,GAAa;AACXV,MAAAA,OAAO,EAAE,EADE;AAEXG,MAAAA,SAAS,EAAE,CAFA;AAGXM,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDI,EAAAA,MAAM,GAAE;AACR,WAEE;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,EAAE,EAAC,UAAP;AAAkB,MAAA,SAAS,EAAC,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWD,KAAX,CAAiBK,GAAjB,CAAqB,CAACC,IAAD,EAAMC,GAAN,KAAc;AACnC,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC,UAAxC;AAAmD,QAAA,GAAG,EAAEA,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BD,IAAI,CAACE,WAAhC,CAFF,CADF,CADJ;AAQD,KATC,CADH,CADH,CAFF;AAiBC;;AAvDwB;;AA0D3B,eAAe7B,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport {TODO_LIST_ADDRESS, TODO_LIST_ABI} from './config'\n\nclass App extends Component{\n\n  componentWillMount(){\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData(){\n    const web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"))\n    const accounts = await web3.eth.getAccounts()\n    console.log(accounts[0])\n    this.setState({ account: accounts[0]})\n    const todoList = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS)\n    this.setState({todoList})\n    console.log(\"TodoList: \",todoList)\n    var taskCount = await todoList.methods.taskCount().call()\n    taskCount = taskCount.toNumber() \n    this.setState({ taskCount })\n    console.log(taskCount)\n\n    for (var i=1; i<= taskCount; i++){\n      var duffa = await todoList.methods.tasks(i).call()\n      this.setState({\n        tasks: [...this.state.tasks, duffa]\n      })\n    }\n    console.log(\"Tasks are here\",this.state.tasks)\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      account: '',\n      taskCount: 0,\n      tasks: []\n    }\n  }\n\n  render(){\n  return (\n  \n    <div className = \"container\">\n       <ul id=\"taskList\" className=\"list-unstyled\">\n        { this.state.tasks.map((task,key) => {\n          return(\n              <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\n                <label>\n                  <input type=\"checkbox\" />\n                  <span className=\"content\">{task.description}</span>\n                </label>\n              </div>\n        )\n        })}\n       </ul>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}